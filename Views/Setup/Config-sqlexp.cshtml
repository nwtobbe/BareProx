@* Used as replacement for config.cshtml if you wan't to use sql express. The migration needs to be recreated in that case. *@

@model BareProx.Models.DatabaseConfigModels

@{
    ViewData["Title"] = "Database Configuration Setup";
    Layout = "_SetupLayout";
}

<h1>@ViewData["Title"]</h1>

<form asp-action="Config" asp-controller="Setup" method="post">
    @Html.AntiForgeryToken()

    <div asp-validation-summary="All" class="text-danger mb-3"></div>

    <!-- Database Type Dropdown -->
    <div class="form-group">
        <label asp-for="DbType" class="control-label">Database Type</label>
        <select asp-for="DbType" class="form-control" id="dbTypeSelector">
            <option value="SqlServer">SQL Server</option>
            <option value="Sqlite">SQLite</option>
        </select>
        <span asp-validation-for="DbType" class="text-danger"></span>
    </div>

    <!-- SQL Server Fields -->
    <div class="form-group sql-only">
        <label asp-for="DbServer" class="control-label">Database Server Address</label>
        <input asp-for="DbServer" class="form-control" data-val="false" />
        <span asp-validation-for="DbServer" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="DbName" class="control-label">Database Name</label>
        <input asp-for="DbName" class="form-control" />
        <span asp-validation-for="DbName" class="text-danger"></span>
    </div>

    <div class="form-group sql-only">
        <label asp-for="DbUser" class="control-label">Username</label>
        <input asp-for="DbUser" class="form-control" data-val="false" />
        <span asp-validation-for="DbUser" class="text-danger"></span>
    </div>

    <div class="form-group sql-only">
        <label asp-for="DbPassword" class="control-label">Password</label>
        <input asp-for="DbPassword" class="form-control" type="password" data-val="false" />
        <span asp-validation-for="DbPassword" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Save Configuration</button>
</form>


@if (TempData["ErrorMessage"] is string errMsg)
{
    <div class="alert alert-danger mt-3">@errMsg</div>
}
@if (TempData["SuccessMessage"] is string successMsg)
{
    <div class="alert alert-success mt-3">@successMsg</div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function updateVisibility() {
            const isSql = document.getElementById("dbTypeSelector").value === "SqlServer";
            document.querySelectorAll(".sql-only").forEach(div => {
                div.style.display = isSql ? "block" : "none";

                if (!isSql) {
                    // clear values and validation messages
                    div.querySelectorAll("input").forEach(i => i.value = "");
                    div.querySelectorAll(".text-danger").forEach(e => e.textContent = "");
                }
            });
        }

        document.getElementById("dbTypeSelector").addEventListener("change", updateVisibility);
        updateVisibility(); // run on initial load
    </script>
}
