@model List<BareProx.Models.UserListItemVm>
@{
    ViewData["Title"] = "User Management";
    var createVm = (BareProx.Models.CreateUserVm)ViewBag.CreateUser;
    var editVm = (BareProx.Models.EditUserVm)ViewBag.EditUser;
    var pwdVm = (BareProx.Models.ChangePasswordVm)ViewBag.ChangePwd;
}

<h2>User Management</h2>

@if (TempData["Msg"] != null)
{
    <div class="alert alert-success">@TempData["Msg"]</div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
<button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#createModal">
  Create New User
</button>

<table class="table table-bordered">
  <thead>
    <tr>
      <th>UserName</th><th>Email</th><th>Locked?</th><th>Actions</th>
    </tr>
  </thead>
  <tbody>
  @foreach (var u in Model) {
    <tr>
      <td>@u.UserName</td>
      <td>@u.Email</td>
      <td>@(u.IsLocked ? "Yes" : "No")</td>
      <td>
        <button class="btn btn-sm btn-info"
                data-bs-toggle="modal" data-bs-target="#editModal"
                data-userid="@u.Id" data-email="@u.Email"
                data-locked="@u.IsLocked">
          Edit
        </button>
        <button class="btn btn-sm btn-warning"
                data-bs-toggle="modal" data-bs-target="#pwdModal"
                data-userid="@u.Id">
          Change Password
        </button>
      </td>
    </tr>
  }
  </tbody>
</table>

<!-- Create Modal -->
<div class="modal fade" id="createModal" tabindex="-1">
  <div class="modal-dialog"><div class="modal-content">
    <form asp-action="Create" method="post">
      <div class="modal-header">
        <h5 class="modal-title">Create User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"/>
      </div>
      <div class="modal-body">
        @Html.AntiForgeryToken()
        <div class="mb-2">
          @Html.LabelFor(m => createVm.UserName)
          @Html.TextBoxFor(m => createVm.UserName, new { @class="form-control" })
        </div>
        <div class="mb-2">
          @Html.LabelFor(m => createVm.Email)
          @Html.TextBoxFor(m => createVm.Email,    new { @class="form-control" })
        </div>
        <div class="mb-2">
          @Html.LabelFor(m => createVm.Password)
          @Html.PasswordFor(m => createVm.Password, new { @class="form-control" })
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary">Create</button>
      </div>
    </form>
  </div></div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1">
  <div class="modal-dialog"><div class="modal-content">
    <form asp-action="Edit" method="post">
      <div class="modal-header">
        <h5 class="modal-title">Edit User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"/>
      </div>
      <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => editVm.Id)
        <div class="mb-2">
          @Html.LabelFor(m => editVm.Email)
          @Html.TextBoxFor(m => editVm.Email, new { @class="form-control" })
        </div>
        <div class="form-check">
          @Html.CheckBoxFor(m => editVm.Lock, new { @class="form-check-input" })
          @Html.LabelFor(m => editVm.Lock, new { @class="form-check-label" })
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary">Save</button>
      </div>
    </form>
  </div></div>
</div>

<!-- Change Password Modal -->
<div class="modal fade" id="pwdModal" tabindex="-1">
  <div class="modal-dialog"><div class="modal-content">
    <form asp-action="ChangePassword" method="post">
      <div class="modal-header">
        <h5 class="modal-title">Change Password</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"/>
      </div>
      <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => pwdVm.Id)
        <div class="mb-2">
          @Html.LabelFor(m => pwdVm.NewPassword)
          @Html.PasswordFor(m => pwdVm.NewPassword,     new { @class="form-control" })
        </div>
        <div class="mb-2">
          @Html.LabelFor(m => pwdVm.ConfirmPassword)
          @Html.PasswordFor(m => pwdVm.ConfirmPassword, new { @class="form-control" })
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-warning">Change</button>
      </div>
    </form>
  </div></div>
</div>

@section Scripts {
  <script>
    // fill edit form when modal opens
    var editModal = document.getElementById('editModal');
    editModal.addEventListener('show.bs.modal', function (e) {
      var btn = e.relatedTarget;
      var id    = btn.getAttribute('data-userid');
      var email = btn.getAttribute('data-email');
      var locked= btn.getAttribute('data-locked') === 'True';
      this.querySelector('input[name="Id"]').value    = id;
      this.querySelector('input[name="Email"]').value = email;
      this.querySelector('input[name="Lock"]').checked= locked;
    });

    // fill pwd form
    var pwdModal = document.getElementById('pwdModal');
    pwdModal.addEventListener('show.bs.modal', function(e) {
      var id = e.relatedTarget.getAttribute('data-userid');
      this.querySelector('input[name="Id"]').value = id;
    });
  </script>
}
